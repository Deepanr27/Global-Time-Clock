{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\globalclocksystem\\\\client\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { GrFormNextLink } from \"react-icons/gr\";\n// import moment, { tz } from \"moment\";\n// import \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInput = () => {\n  _s();\n  const [indianTime, setIndianTime] = useState(\"\");\n  const [hongKongTimestate, setHongKongTime] = useState(\"\");\n  const convertTime = () => {\n    const [hours, minutes] = indianTime.split(\":\");\n    const indianDate = new Date();\n    indianDate.setHours(parseInt(hours, 10));\n    indianDate.setMinutes(parseInt(minutes, 10));\n    indianDate.setSeconds(0);\n    const indianOffset = indianDate.getTimezoneOffset() * 60000; // Convert minutes to milliseconds\n    const hongKongOffset = -480 * 60000; // Hong Kong is UTC+8 (480 minutes)\n    const hongKongTime = new Date(indianDate.getTime() + indianOffset + hongKongOffset);\n    const hongKongTimeString = hongKongTime.toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Hong_Kong\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    });\n    setHongKongTime(hongKongTimeString);\n    console.log(hongKongTimestate);\n  };\n  const [hours, setHours] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [seconds, setSeconds] = useState(\"\");\n  const [amPm, setAmPm] = useState(\"AM\");\n  const handleTimeSubmit = () => {\n    const data = {\n      hours: parseInt(hours),\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds),\n      am_pm: amPm\n    };\n    fetch(\"/api/save_custom_time\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Handle success or display a notification to the user\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      // Handle error or display a notification to the user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Custom Time\",\n        type: \"time\",\n        id: \"indianTime\",\n        value: indianTime,\n        onChange: e => setIndianTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrFormNextLink, {\n        size: 30,\n        cursor: \"pointer\",\n        onClick: convertTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomInput, \"yeUkBVGrASZeAfldV8z2yGV4SyU=\");\n_c = CustomInput;\nexport default CustomInput;\nvar _c;\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","useState","useEffect","GrFormNextLink","jsxDEV","_jsxDEV","CustomInput","_s","indianTime","setIndianTime","hongKongTimestate","setHongKongTime","convertTime","hours","minutes","split","indianDate","Date","setHours","parseInt","setMinutes","setSeconds","indianOffset","getTimezoneOffset","hongKongOffset","hongKongTime","getTime","hongKongTimeString","toLocaleString","timeZone","year","month","day","hour","minute","second","console","log","seconds","amPm","setAmPm","handleTimeSubmit","data","am_pm","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","className","children","placeholder","type","id","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","size","cursor","onClick","_c","$RefreshReg$"],"sources":["D:/program project/React Django/globalclocksystem/client/src/Components/CustomInput/CustomInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { GrFormNextLink } from \"react-icons/gr\";\r\n// import moment, { tz } from \"moment\";\r\n// import \"moment-timezone\";\r\nconst CustomInput = () => {\r\n  const [indianTime, setIndianTime] = useState(\"\");\r\n  const [hongKongTimestate, setHongKongTime] = useState(\"\");\r\n\r\n  const convertTime = () => {\r\n    const [hours, minutes] = indianTime.split(\":\");\r\n    const indianDate = new Date();\r\n    indianDate.setHours(parseInt(hours, 10));\r\n    indianDate.setMinutes(parseInt(minutes, 10));\r\n    indianDate.setSeconds(0);\r\n\r\n    const indianOffset = indianDate.getTimezoneOffset() * 60000; // Convert minutes to milliseconds\r\n    const hongKongOffset = -480 * 60000; // Hong Kong is UTC+8 (480 minutes)\r\n    const hongKongTime = new Date(\r\n      indianDate.getTime() + indianOffset + hongKongOffset\r\n    );\r\n\r\n    const hongKongTimeString = hongKongTime.toLocaleString(\"en-US\", {\r\n      timeZone: \"Asia/Hong_Kong\",\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n    });\r\n\r\n    setHongKongTime(hongKongTimeString);\r\n    console.log(hongKongTimestate);\r\n  };\r\n\r\n  const [hours, setHours] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(\"\");\r\n  const [seconds, setSeconds] = useState(\"\");\r\n  const [amPm, setAmPm] = useState(\"AM\");\r\n\r\n  const handleTimeSubmit = () => {\r\n    const data = {\r\n      hours: parseInt(hours),\r\n      minutes: parseInt(minutes),\r\n      seconds: parseInt(seconds),\r\n      am_pm: amPm,\r\n    };\r\n\r\n    fetch(\"/api/save_custom_time\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        // Handle success or display a notification to the user\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // Handle error or display a notification to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-wrapper-container\">\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          placeholder=\"Custom Time\"\r\n          type=\"time\"\r\n          id=\"indianTime\"\r\n          value={indianTime}\r\n          onChange={(e) => setIndianTime(e.target.value)}\r\n        />\r\n\r\n        <GrFormNextLink size={30} cursor={\"pointer\"} onClick={convertTime} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}