{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\globalclocksystem\\\\client\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { GrFormNextLink } from \"react-icons/gr\";\n// import moment, { tz } from \"moment\";\n// import \"moment-timezone\";\nimport { DateTime } from \"luxon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInput = () => {\n  _s();\n  const [indianTime, setIndianTime] = useState(\"\");\n  const [hongKongTime, setHongKongTime] = useState(\"\");\n  const [usTime, setUSTime] = useState(\"\");\n  useEffect(() => {\n    convertTime();\n  }, [indianTime]);\n  const convertTime = () => {\n    const indianDateTime = DateTime.fromFormat(indianTime, \"HH:mm:ss\", {\n      zone: \"Asia/Kolkata\"\n    });\n    if (!indianDateTime.isValid) {\n      setHongKongTime(\"Invalid Time\");\n      setUSTime(\"Invalid Time\");\n      return;\n    }\n    const hongKongDateTime = indianDateTime.setZone(\"Asia/Hong_Kong\");\n    const formattedHongKongTime = hongKongDateTime.toLocaleTimeString([], {\n      hour12: false\n    });\n    const usDateTime = indianDateTime.setZone(\"America/New_York\");\n    const formattedUSTime = usDateTime.toLocaleTimeString([], {\n      hour12: false\n    });\n    setHongKongTime(formattedHongKongTime);\n    setUSTime(formattedUSTime);\n    console.log(hongKongTime, \" \", usTime);\n  };\n  const [hours, setHours] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [seconds, setSeconds] = useState(\"\");\n  const [amPm, setAmPm] = useState(\"AM\");\n  const handleTimeSubmit = () => {\n    const data = {\n      hours: parseInt(hours),\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds),\n      am_pm: amPm\n    };\n    fetch(\"/api/save_custom_time\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Handle success or display a notification to the user\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      // Handle error or display a notification to the user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Custom Time\",\n        type: \"time\",\n        id: \"indianTime\",\n        value: indianTime,\n        onChange: e => setIndianTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrFormNextLink, {\n        size: 30,\n        cursor: \"pointer\",\n        onClick: convertTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomInput, \"tN38niNe1G7CtHIKTEMD8BXdZtE=\");\n_c = CustomInput;\nexport default CustomInput;\nvar _c;\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","useState","useEffect","GrFormNextLink","DateTime","jsxDEV","_jsxDEV","CustomInput","_s","indianTime","setIndianTime","hongKongTime","setHongKongTime","usTime","setUSTime","convertTime","indianDateTime","fromFormat","zone","isValid","hongKongDateTime","setZone","formattedHongKongTime","toLocaleTimeString","hour12","usDateTime","formattedUSTime","console","log","hours","setHours","minutes","setMinutes","seconds","setSeconds","amPm","setAmPm","handleTimeSubmit","data","parseInt","am_pm","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","className","children","placeholder","type","id","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","size","cursor","onClick","_c","$RefreshReg$"],"sources":["D:/program project/React Django/globalclocksystem/client/src/Components/CustomInput/CustomInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { GrFormNextLink } from \"react-icons/gr\";\r\n// import moment, { tz } from \"moment\";\r\n// import \"moment-timezone\";\r\nimport { DateTime } from \"luxon\";\r\nconst CustomInput = () => {\r\n  const [indianTime, setIndianTime] = useState(\"\");\r\n  const [hongKongTime, setHongKongTime] = useState(\"\");\r\n  const [usTime, setUSTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    convertTime();\r\n  }, [indianTime]);\r\n\r\n  const convertTime = () => {\r\n    const indianDateTime = DateTime.fromFormat(indianTime, \"HH:mm:ss\", {\r\n      zone: \"Asia/Kolkata\",\r\n    });\r\n    if (!indianDateTime.isValid) {\r\n      setHongKongTime(\"Invalid Time\");\r\n      setUSTime(\"Invalid Time\");\r\n      return;\r\n    }\r\n\r\n    const hongKongDateTime = indianDateTime.setZone(\"Asia/Hong_Kong\");\r\n    const formattedHongKongTime = hongKongDateTime.toLocaleTimeString([], {\r\n      hour12: false,\r\n    });\r\n\r\n    const usDateTime = indianDateTime.setZone(\"America/New_York\");\r\n    const formattedUSTime = usDateTime.toLocaleTimeString([], {\r\n      hour12: false,\r\n    });\r\n\r\n    setHongKongTime(formattedHongKongTime);\r\n    setUSTime(formattedUSTime);\r\n    console.log(hongKongTime, \" \", usTime);\r\n  };\r\n\r\n  const [hours, setHours] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(\"\");\r\n  const [seconds, setSeconds] = useState(\"\");\r\n  const [amPm, setAmPm] = useState(\"AM\");\r\n\r\n  const handleTimeSubmit = () => {\r\n    const data = {\r\n      hours: parseInt(hours),\r\n      minutes: parseInt(minutes),\r\n      seconds: parseInt(seconds),\r\n      am_pm: amPm,\r\n    };\r\n\r\n    fetch(\"/api/save_custom_time\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        // Handle success or display a notification to the user\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // Handle error or display a notification to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-wrapper-container\">\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          placeholder=\"Custom Time\"\r\n          type=\"time\"\r\n          id=\"indianTime\"\r\n          value={indianTime}\r\n          onChange={(e) => setIndianTime(e.target.value)}\r\n        />\r\n\r\n        <GrFormNextLink size={30} cursor={\"pointer\"} onClick={convertTime} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}