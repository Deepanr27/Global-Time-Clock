{"ast":null,"code":"var _jsxFileName = \"D:\\\\program project\\\\React Django\\\\globalclocksystem\\\\client\\\\src\\\\Components\\\\CustomInput\\\\CustomInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { GrFormNextLink } from \"react-icons/gr\";\n// import moment, { tz } from \"moment\";\n// import \"moment-timezone\";\nimport { DateTime } from \"luxon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomInput = () => {\n  _s();\n  const [indianTime, setIndianTime] = useState(\"\");\n  const [hongKongTimestate, setHongKongTime] = useState(\"\");\n  const convertTime = () => {\n    const indianDateTime = DateTime.fromFormat(indianTime, \"hh:mm:a\", {\n      zone: \"Asia/Kolkata\"\n    });\n    const hongKongDateTime = indianDateTime.setZone(\"Asia/Hong_Kong\");\n    const formattedHongKongTime = hongKongDateTime.toFormat(\"hh:mm:a\");\n    setHongKongTime(formattedHongKongTime);\n    console.log(hongKongTimestate);\n  };\n  const [hours, setHours] = useState(\"\");\n  const [minutes, setMinutes] = useState(\"\");\n  const [seconds, setSeconds] = useState(\"\");\n  const [amPm, setAmPm] = useState(\"AM\");\n  const handleTimeSubmit = () => {\n    const data = {\n      hours: parseInt(hours),\n      minutes: parseInt(minutes),\n      seconds: parseInt(seconds),\n      am_pm: amPm\n    };\n    fetch(\"/api/save_custom_time\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Handle success or display a notification to the user\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      // Handle error or display a notification to the user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Custom Time\",\n        type: \"time\",\n        id: \"indianTime\",\n        value: indianTime,\n        onChange: e => setIndianTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrFormNextLink, {\n        size: 30,\n        cursor: \"pointer\",\n        onClick: convertTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomInput, \"yeUkBVGrASZeAfldV8z2yGV4SyU=\");\n_c = CustomInput;\nexport default CustomInput;\nvar _c;\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"names":["React","useState","useEffect","GrFormNextLink","DateTime","jsxDEV","_jsxDEV","CustomInput","_s","indianTime","setIndianTime","hongKongTimestate","setHongKongTime","convertTime","indianDateTime","fromFormat","zone","hongKongDateTime","setZone","formattedHongKongTime","toFormat","console","log","hours","setHours","minutes","setMinutes","seconds","setSeconds","amPm","setAmPm","handleTimeSubmit","data","parseInt","am_pm","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","className","children","placeholder","type","id","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","size","cursor","onClick","_c","$RefreshReg$"],"sources":["D:/program project/React Django/globalclocksystem/client/src/Components/CustomInput/CustomInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { GrFormNextLink } from \"react-icons/gr\";\r\n// import moment, { tz } from \"moment\";\r\n// import \"moment-timezone\";\r\nimport { DateTime } from \"luxon\";\r\nconst CustomInput = () => {\r\n  const [indianTime, setIndianTime] = useState(\"\");\r\n  const [hongKongTimestate, setHongKongTime] = useState(\"\");\r\n\r\n  const convertTime = () => {\r\n    const indianDateTime = DateTime.fromFormat(indianTime, \"hh:mm:a\", {\r\n      zone: \"Asia/Kolkata\",\r\n    });\r\n    const hongKongDateTime = indianDateTime.setZone(\"Asia/Hong_Kong\");\r\n    const formattedHongKongTime = hongKongDateTime.toFormat(\"hh:mm:a\");\r\n\r\n    setHongKongTime(formattedHongKongTime);\r\n    console.log(hongKongTimestate);\r\n  };\r\n\r\n  const [hours, setHours] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(\"\");\r\n  const [seconds, setSeconds] = useState(\"\");\r\n  const [amPm, setAmPm] = useState(\"AM\");\r\n\r\n  const handleTimeSubmit = () => {\r\n    const data = {\r\n      hours: parseInt(hours),\r\n      minutes: parseInt(minutes),\r\n      seconds: parseInt(seconds),\r\n      am_pm: amPm,\r\n    };\r\n\r\n    fetch(\"/api/save_custom_time\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        // Handle success or display a notification to the user\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // Handle error or display a notification to the user\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-wrapper-container\">\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          placeholder=\"Custom Time\"\r\n          type=\"time\"\r\n          id=\"indianTime\"\r\n          value={indianTime}\r\n          onChange={(e) => setIndianTime(e.target.value)}\r\n        />\r\n\r\n        <GrFormNextLink size={30} cursor={\"pointer\"} onClick={convertTime} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}